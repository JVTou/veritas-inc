---
import MainLayout from "../layouts/MainLayout.astro";
---

<MainLayout
  title="Veritas Managed Solutions, inc."
  seoTitle="Veritas Managed Solutions, inc."
  seoDescription="Cabling and installation of low voltage systems, wireless, security, AV, electrical"
>
  <div class="hero min-w-screen min-h-screen">
    <video
      autoplay
      loop
      muted
      playsinline
      class="absolute z-10 top-0 object-cover min-w-full min-h-screen"
      id="BGvideo"
      src="/assets/background/networkbg.mp4"
    >
      Your browser does not support the video tag.
    </video>
    <div class="hero-overlay bg-transparent"></div>
    <div class="hero-content text-center z-20" transition:animate="slide">
      <div
        class="max-w-xl flex flex-col justify-between text-primary-content gap-5"
      >
        <h1
          class="text-7xl font-bold hidden lg:inline pointer-events-none"
          id="title"
        >
          veritas managed solutions, inc.
        </h1>
        <h1
          class="h-[120px] lg:h-[130px] overflow-hidden text-4xl lg:text-6xl pointer-events-none justify-center flex flex-row items-center"
          id="scramble"
        >
          Services
        </h1>
        <div class="w-full">
          <a href="/projects">
            <button class="btn btn-primary"
              >More Services<svg
                class="ml-1 w-5 h-5"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
                ><path
                  fill-rule="evenodd"
                  d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
                  clip-rule="evenodd"></path></svg
              ></button
            ></a
          >
          <a href="/about">
            <button class="btn btn-outline">Contact Us</button></a
          >
        </div>
      </div>
    </div>
  </div>
  <section class="w-11/12 lg:w-6/12 mx-auto z-20 relative">
    <div class="relative mx-auto max-w-6xl rounded-lg shadow-lg">
      <div class="bg-neutral p-7 rounded-md">
        <h1 class="font-bold text-xl mb-2 text-primary-content">
          Verified. Certified. Tested.
        </h1>
        <p>
          Veritas Managed Solutions has established itself as a leading provider
          of
          <strong>low voltage</strong> projects in commercial, industrial, office,
          and residential environments since its establishment in 2009. With over
          <strong>30 years experience</strong>, our technicians and project
          managers are dedicated to delivering high-quality services to our
          clients, regardless of the size or complexity of the project. We are
          committed to providing <strong>innovative solutions</strong> that are tailored
          to the specific needs of each client, ensuring that our projects are completed
          on time and within budget. Veritas Managed Solutions' dedication to <strong
            >quality, reliability, and exceptional</strong
          > customer service has made us a reputation as a trusted partner for low
          voltage projects in various environments. Our <strong
            >commitment to excellence</strong
          > makes us the go-to choice for both businesses and homeowners looking
          to install low voltage systems.
        </p>
      </div>
    </div>
  </section>

  <script>
    document.addEventListener("astro:page-load", () => {
      Scramble();
    });
    // ——————————————————————————————————————————————————
    // TextScramble
    // ——————————————————————————————————————————————————
    function Scramble() {
      class TextScramble {
        el: any;
        chars: string;
        queue: any[];
        frameRequest: number;
        frame: number;
        constructor(el) {
          this.el = el;
          this.chars = "!<>-_\\/[]{}—=+*^?#________";
          this.update = this.update.bind(this);
        }
        setText(newText) {
          const oldText = this.el.innerText;
          const length = Math.max(oldText.length, newText.length);
          const promise = new Promise((resolve) => (this.resolve = resolve));
          this.queue = [];
          for (let i = 0; i < length; i++) {
            const from = oldText[i] || "";
            const to = newText[i] || "";
            const start = Math.floor(Math.random() * 40);
            const end = start + Math.floor(Math.random() * 40);
            this.queue.push({ from, to, start, end });
          }
          cancelAnimationFrame(this.frameRequest);
          this.frame = 0;
          this.update();
          return promise;
        }
        update() {
          let output = "";
          let complete = 0;
          for (let i = 0, n = this.queue.length; i < n; i++) {
            let { from, to, start, end, char } = this.queue[i];
            if (this.frame >= end) {
              complete++;
              output += to;
            } else if (this.frame >= start) {
              if (!char || Math.random() < 0.28) {
                char = this.randomChar();
                this.queue[i].char = char;
              }
              output += `<span class="dud">${char}</span>`;
            } else {
              output += from;
            }
          }
          this.el.innerHTML = output;
          if (complete === this.queue.length) {
            this.resolve();
          } else {
            this.frameRequest = requestAnimationFrame(this.update);
            this.frame++;
          }
        }
        randomChar() {
          return this.chars[Math.floor(Math.random() * this.chars.length)];
        }
      }

      // ——————————————————————————————————————————————————
      // Phrases
      // ——————————————————————————————————————————————————

      const phrases = [
        "Low Voltage",
        "Data Cabling",
        "AV Rooms",
        "Electrical",
        "Server Racks",
        "Security",
        "Wireless",
        "Access Control",
        "Fiber Optics",
        "Data Centers",
      ];

      const el = document.querySelector("#scramble");
      const fx = new TextScramble(el);

      let counter = 0;
      const next = () => {
        fx.setText(phrases[counter]).then(() => {
          setTimeout(next, 1500);
        });
        counter = (counter + 1) % phrases.length;
      };

      next();
    }
  </script>

  <script>
    document.addEventListener("astro:page-load", () => {
      Slowmo();
    });
    function Slowmo() {
      let vid = document.getElementById("BGvideo");
      vid.playbackRate = 0.1;
    }
  </script>

  <style>
    #scramble {
      font-family: "Roboto Mono", ui-monospace;
    }
    #title {
      font-family: "EB Garamond", serif;
    }
  </style>
</MainLayout>
